
import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const geminiApiKey = Deno.env.get('GEMINI_API_KEY');

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

interface QuizRequest {
  theme: string;
  difficulty: string;
  questionCount: number;
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    console.log('üöÄ Starting BIBLICAL QUIZ generation with Gemini Pro...');
    
    if (!geminiApiKey) {
      console.error('‚ùå Gemini API key not found');
      throw new Error('Cl√© API Gemini non configur√©e');
    }

    const { theme, difficulty, questionCount }: QuizRequest = await req.json();
    console.log('üìù Request params:', { theme, difficulty, questionCount });

    // CONTEXTES BIBLIQUES ULTRA-D√âTAILL√âS - Chaque th√®me avec r√©f√©rences pr√©cises
    const biblicalContexts: Record<string, { title: string; context: string; keyVerses: string[] }> = {
      // J√©sus-Christ - Fondements doctrinaux
      'vie-jesus': {
        title: 'la vie de J√©sus-Christ, le Fils de Dieu',
        context: 'Incarnation (Jean 1:14), naissance virginale √† Bethl√©em (Matthieu 1:18-25, Luc 2:1-20), annonciation √† Marie (Luc 1:26-38), fuite en √âgypte (Matthieu 2:13-15), enfance √† Nazareth (Luc 2:39-40), bapt√™me par Jean-Baptiste dans le Jourdain (Matthieu 3:13-17), tentation au d√©sert (Matthieu 4:1-11), appel des douze ap√¥tres (Marc 3:13-19), sermon sur la montagne (Matthieu 5-7), miracles de gu√©rison et r√©surrections, transfiguration (Matthieu 17:1-9), entr√©e triomphale √† J√©rusalem (Matthieu 21:1-11), derni√®re c√®ne et institution de la communion (Matthieu 26:26-29), agonie √† Geths√©man√© (Matthieu 26:36-46), arrestation et proc√®s (Matthieu 26:47-27:31), crucifixion au Golgotha (Matthieu 27:32-56), r√©surrection le troisi√®me jour (Matthieu 28:1-10), apparitions post-r√©surrection (Luc 24, Jean 20-21), ascension au ciel (Actes 1:9-11)',
        keyVerses: ['Jean 3:16', 'Jean 1:1', 'Philippiens 2:6-8', 'H√©breux 4:15', 'Matthieu 1:23']
      },
      'miracles-jesus': {
        title: 'les miracles de J√©sus attestant sa divinit√©',
        context: 'Gu√©risons miraculeuses : aveugles-n√©s (Jean 9:1-12), paralytiques (Marc 2:1-12), l√©preux (Matthieu 8:1-4), poss√©d√©s (Marc 5:1-20), femme h√©morro√Øsse (Marc 5:25-34), serviteur du centurion (Matthieu 8:5-13), belle-m√®re de Pierre (Matthieu 8:14-15), homme √† la main s√®che (Matthieu 12:9-13), sourd-muet (Marc 7:31-37), aveugle de Bethsa√Øda (Marc 8:22-26), dix l√©preux (Luc 17:11-19). R√©surrections : fille de Ja√Ørus (Marc 5:35-43), fils de la veuve de Na√Øn (Luc 7:11-17), Lazare apr√®s quatre jours (Jean 11:1-44). Miracles sur la nature : multiplication des pains et poissons (Matthieu 14:13-21, 15:32-39), marche sur les eaux (Matthieu 14:22-33), temp√™te apais√©e (Marc 4:35-41), p√™che miraculeuse (Luc 5:1-11, Jean 21:1-11), eau chang√©e en vin √† Cana (Jean 2:1-11), figuier dess√©ch√© (Matthieu 21:18-22), pi√®ce dans la bouche du poisson (Matthieu 17:24-27)',
        keyVerses: ['Jean 20:30-31', 'Matthieu 11:4-5', 'Marc 16:20', 'Actes 2:22', 'H√©breux 2:4']
      },
      'paraboles-jesus': {
        title: 'les paraboles de J√©sus, enseignements du Royaume',
        context: 'Paraboles du Royaume des cieux : semeur (Matthieu 13:1-23), ivraie (Matthieu 13:24-30), grain de moutarde (Matthieu 13:31-32), levain (Matthieu 13:33), tr√©sor cach√© (Matthieu 13:44), perle de grand prix (Matthieu 13:45-46), filet (Matthieu 13:47-50), ma√Ætre de maison (Matthieu 13:52). Paraboles de mis√©ricorde : bon Samaritain (Luc 10:25-37), fils prodigue (Luc 15:11-32), brebis perdue (Luc 15:3-7), drachme perdue (Luc 15:8-10), pharisien et publicain (Luc 18:9-14). Paraboles d\'exhortation : bon et mauvais serviteur (Matthieu 24:45-51), dix vierges (Matthieu 25:1-13), talents (Matthieu 25:14-30), ouvriers de la vigne (Matthieu 20:1-16), riche insens√© (Luc 12:16-21), intendant infid√®le (Luc 16:1-13), juge inique (Luc 18:1-8), ami importun (Luc 11:5-8)',
        keyVerses: ['Matthieu 13:34-35', 'Marc 4:33-34', 'Luc 8:10', 'Matthieu 13:11', 'Psaume 78:2']
      },

      // Pentateuque - Fondements de la foi
      'creation': {
        title: 'la cr√©ation du monde par la Parole de Dieu',
        context: 'Six jours de cr√©ation (Gen√®se 1:1-31) : Jour 1 -lumi√®re/t√©n√®bres, Jour 2 -firmament/eaux, Jour 3 -terre s√®che/v√©g√©tation, Jour 4 -astres/luminaires, Jour 5 -animaux marins/oiseaux, Jour 6 -animaux terrestres/homme cr√©√© √† l\'image de Dieu (Gen√®se 1:26-27), Jour 7 -sabbat de repos (Gen√®se 2:1-3). Formation de l\'homme de la poussi√®re (Gen√®se 2:7), souffle de vie, jardin d\'√âden plant√© par l\'√âternel (Gen√®se 2:8), arbre de vie et arbre de la connaissance du bien et du mal (Gen√®se 2:9), quatre fleuves (Gen√®se 2:10-14), commandement divin (Gen√®se 2:16-17), cr√©ation de la femme (Gen√®se 2:18-25), nudit√© sans honte (Gen√®se 2:25), chute par d√©sob√©issance (Gen√®se 3:1-7), cons√©quences du p√©ch√© (Gen√®se 3:8-24), promesse du R√©dempteur (Gen√®se 3:15)',
        keyVerses: ['Gen√®se 1:1', 'Gen√®se 1:26-27', 'Gen√®se 2:7', 'Jean 1:3', 'Colossiens 1:16']
      },
      'moise': {
        title: 'Mo√Øse, l√©gislateur et lib√©rateur choisi par Dieu',
        context: 'Naissance en √âgypte pendant l\'oppression (Exode 1:8-22), sauv√© des eaux du Nil (Exode 2:1-10), √©ducation √† la cour de Pharaon (Actes 7:22), fuite au pays de Madian apr√®s le meurtre de l\'√âgyptien (Exode 2:11-22), mariage avec S√©phora (Exode 2:21), appel divin au buisson ardent (Exode 3:1-4:17), "Je suis celui qui suis" (Exode 3:14), mission de lib√©ration avec Aaron (Exode 4:14-16), dix plaies d\'√âgypte (Exode 7-12), institution de la P√¢que (Exode 12:1-28), sortie d\'√âgypte et passage de la mer Rouge (Exode 14), cantique de victoire (Exode 15), don de la manne (Exode 16), eau du rocher (Exode 17:1-7), victoire contre Amalek (Exode 17:8-16), don de la Loi au Sina√Ø (Exode 19-20), intercession pour le peuple (Exode 32:11-14), face rayonnante (Exode 34:29-35), construction du tabernacle (Exode 25-40), mort sur le mont N√©bo (Deut√©ronome 34:1-8)',
        keyVerses: ['Exode 3:14', 'Deut√©ronome 18:15', 'H√©breux 11:24-26', 'Nombres 12:3', 'Deut√©ronome 34:10']
      },

      // Nouveau Testament - √âglise primitive
      'actes-apotres': {
        title: 'les Actes des Ap√¥tres et l\'√âglise naissante',
        context: 'Promesse du Saint-Esprit (Actes 1:4-8), ascension de J√©sus (Actes 1:9-11), √©lection de Matthias (Actes 1:15-26), Pentec√¥te et descente de l\'Esprit (Actes 2:1-13), pr√©dication de Pierre (Actes 2:14-41), 3000 convertis, vie communautaire (Actes 2:42-47), gu√©rison du paralytique (Actes 3:1-10), arrestation de Pierre et Jean (Actes 4:1-22), pri√®re de l\'√âglise (Actes 4:23-31), Ananias et Saphira (Actes 5:1-11), signes et prodiges (Actes 5:12-16), pers√©cution du sanh√©drin (Actes 5:17-42), √©lection des sept diacres (Actes 6:1-7), martyre d\'√âtienne (Actes 7:54-60), pers√©cution de Saul (Actes 8:1-3), Philippe en Samarie (Actes 8:4-25), conversion de l\'eunuque √©thiopien (Actes 8:26-40), conversion de Saul sur le chemin de Damas (Actes 9:1-19), vision de Pierre et Corneille (Actes 10), √âglise d\'Antioche (Actes 11:19-30), mort d\'H√©rode Agrippa (Actes 12:20-23), premier voyage missionnaire (Actes 13-14), concile de J√©rusalem (Actes 15), expansion vers l\'Europe (Actes 16:6-10), minist√®re √† Philippes, Thessalonique, B√©r√©e, Ath√®nes, Corinthe (Actes 16-18), troisi√®me voyage (Actes 18:23-21:17), arrestation √† J√©rusalem (Actes 21:17-23:35), proc√®s devant F√©lix et Festus (Actes 24-26), voyage vers Rome et naufrage (Actes 27-28)',
        keyVerses: ['Actes 1:8', 'Actes 2:41', 'Actes 4:12', 'Actes 9:15', 'Actes 20:28']
      },

      // Proph√®tes
      'esaie': {
        title: '√âsa√Øe, le proph√®te messianique par excellence',
        context: 'Appel proph√©tique et vision du temple (√âsa√Øe 6:1-13), Emmanuel (√âsa√Øe 7:14), enfant qui nous est n√© (√âsa√Øe 9:5-6), rejeton d\'Isa√Ø (√âsa√Øe 11:1-10), chants du Serviteur souffrant (√âsa√Øe 42:1-9, 49:1-13, 50:4-11, 52:13-53:12), "Il a √©t√© bless√© pour nos p√©ch√©s" (√âsa√Øe 53:5), consolation d\'Isra√´l (√âsa√Øe 40:1-11), "Voix de celui qui crie dans le d√©sert" (√âsa√Øe 40:3), "Tous comme des brebis nous √©tions errants" (√âsa√Øe 53:6), lib√©ration de l\'exil babylonien par Cyrus (√âsa√Øe 44:28-45:13), nouveaux cieux et nouvelle terre (√âsa√Øe 65:17-25), jugement des nations (√âsa√Øe 13-23), petite apocalypse (√âsa√Øe 24-27), malheurs contre Juda et J√©rusalem (√âsa√Øe 28-35), √âz√©chias et Sanch√©rib (√âsa√Øe 36-39), livre de la consolation (√âsa√Øe 40-66)',
        keyVerses: ['√âsa√Øe 7:14', '√âsa√Øe 9:5', '√âsa√Øe 53:5-6', '√âsa√Øe 40:3', '√âsa√Øe 6:3']
      },

      // Personnages de l'AT
      'david': {
        title: 'David, roi selon le c≈ìur de Dieu',
        context: 'Onction par Samuel √† Bethl√©em (1 Samuel 16:1-13), musicien √† la cour de Sa√ºl (1 Samuel 16:14-23), victoire contre Goliath de Gath (1 Samuel 17), amiti√© avec Jonathan (1 Samuel 18:1-4), jalousie de Sa√ºl (1 Samuel 18:5-16), mariage avec Mical (1 Samuel 18:17-30), fuite et vie errante (1 Samuel 19-26), s√©jour chez les Philistins (1 Samuel 27-30), mort de Sa√ºl et Jonathan (1 Samuel 31), lamentation (2 Samuel 1), roi de Juda √† H√©bron (2 Samuel 2:1-7), guerre contre la maison de Sa√ºl (2 Samuel 2:8-4:12), roi de tout Isra√´l (2 Samuel 5:1-5), conqu√™te de J√©rusalem (2 Samuel 5:6-10), victoires contre les Philistins (2 Samuel 5:17-25), transport de l\'arche (2 Samuel 6), alliance davidique (2 Samuel 7), conqu√™tes et empire (2 Samuel 8-10), p√©ch√© avec Bath-Sch√©ba (2 Samuel 11), r√©primande de Nathan (2 Samuel 12:1-15), mort de l\'enfant (2 Samuel 12:15-23), naissance de Salomon (2 Samuel 12:24-25), r√©volte d\'Absalom (2 Samuel 13-19), d√©nombrement et peste (2 Samuel 24), derni√®res paroles (2 Samuel 23:1-7), psalmiste inspir√© (Psaumes)',
        keyVerses: ['1 Samuel 13:14', '2 Samuel 7:16', 'Psaume 23:1', 'Actes 13:22', 'Matthieu 1:1']
      },

      // Et continuer pour tous les autres th√®mes...
      'abraham': {
        title: 'Abraham, p√®re de la foi et des croyants',
        context: 'Appel √† Ur des Chald√©ens (Gen√®se 12:1-3), promesses divines (descendance, terre, b√©n√©diction), d√©part vers Canaan (Gen√®se 12:4-9), descente en √âgypte (Gen√®se 12:10-20), s√©paration d\'avec Lot (Gen√®se 13), victoire contre les rois (Gen√®se 14), alliance avec Dieu (Gen√®se 15), naissance d\'Isma√´l par Agar (Gen√®se 16), circoncision signe de l\'alliance (Gen√®se 17), hospitalit√© aux trois anges (Gen√®se 18:1-15), intercession pour Sodome (Gen√®se 18:16-33), naissance d\'Isaac (Gen√®se 21:1-7), renvoi d\'Agar et Isma√´l (Gen√®se 21:8-21), sacrifice d\'Isaac sur le mont Morija (Gen√®se 22:1-19), achat de la caverne de Macp√©la (Gen√®se 23), mariage d\'Isaac (Gen√®se 24), mort √† 175 ans (Gen√®se 25:7-10)',
        keyVerses: ['Gen√®se 12:2-3', 'Gen√®se 15:6', 'Romains 4:16', 'Galates 3:8-9', 'H√©breux 11:8-10']
      }
    };

    // Instructions de difficult√© ultra-pr√©cises
    const difficultyInstructions = {
      'facile': {
        level: 'niveau d√©butant en connaissance biblique',
        instructions: 'Questions sur les faits bibliques fondamentaux, personnages c√©l√®bres, √©v√©nements majeurs bien connus. √âviter les d√©tails complexes, les nuances th√©ologiques ou les r√©f√©rences obscures. R√©ponses √©videntes pour un croyant ayant des bases bibliques solides.'
      },
      'moyen': {
        level: 'niveau interm√©diaire en √©tude biblique',
        instructions: 'Questions d√©taill√©es n√©cessitant une connaissance approfondie des √âcritures, connexions entre livres, chronologie pr√©cise, contexte historique, significations symboliques. Inclure des r√©f√©rences sp√©cifiques et des analyses textuelles mod√©r√©es.'
      },
      'difficile': {
        level: 'niveau expert en th√©ologie biblique',
        instructions: 'Questions complexes exigeant une ma√Ætrise th√©ologique avanc√©e, ex√©g√®se approfondie, h√©breu/grec, doctrines pointues, controverses th√©ologiques, parall√®les inter-testamentaires, typologie messianique, eschatologie d√©taill√©e.'
      }
    };

    const selectedContext = biblicalContexts[theme];
    const selectedDifficulty = difficultyInstructions[difficulty];

    if (!selectedContext) {
      throw new Error(`Th√®me biblique non support√©: ${theme}`);
    }

    // Seed ultra-unique pour √©viter toute r√©p√©tition
    const timestamp = Date.now();
    const randomSeed = Math.random() * 999999999;
    const themeHash = theme.split('').reduce((acc, char, i) => acc + char.charCodeAt(0) * (i + 1), 0);
    const difficultyHash = difficulty.split('').reduce((acc, char, i) => acc + char.charCodeAt(0) * (i + 1), 0);
    const ultraUniqueSeed = Math.floor(timestamp + randomSeed + themeHash * 13 + difficultyHash * 17 + questionCount * 23);

    console.log('üé≤ Ultra-unique seed generated:', ultraUniqueSeed);
    console.log('üìñ Biblical theme:', selectedContext.title);
    console.log('üéØ Difficulty level:', selectedDifficulty.level);

    // PROMPT TH√âOLOGIQUE RIGOUREUX - Garantie d'exactitude doctrinale
    const rigorousPrompt = `En tant qu'expert th√©ologien √©vang√©lique reconnu et docteur en √©tudes bibliques, je vous demande de cr√©er un quiz biblique d'excellence acad√©mique sur "${selectedContext.title}".

üîç CONTEXTE BIBLIQUE D√âTAILL√â :
${selectedContext.context}

üìö VERSETS CL√âS DE R√âF√âRENCE :
${selectedContext.keyVerses?.join(', ') || 'R√©f√©rences contextuelle pr√©cises requises'}

üéØ NIVEAU EXIG√â : ${selectedDifficulty.instructions}

üî¢ SEED D'UNICIT√â ABSOLUE : ${ultraUniqueSeed}
(Utilisez ce nombre pour cr√©er ${questionCount} questions TOTALEMENT IN√âDITES et JAMAIS POS√âES)

‚ö†Ô∏è EXIGENCES DOCTRINALES ABSOLUES :
1. EXACTITUDE BIBLIQUE PARFAITE - Aucune erreur factuelle tol√©r√©e
2. CONFORMIT√â ORTHODOXE - Respecter la doctrine √©vang√©lique historique
3. R√âF√âRENCES PR√âCISES - Chaque question doit citer des versets authentiques
4. V√âRIT√â TH√âOLOGIQUE - √âviter toute ambigu√Øt√© doctrinale
5. ORIGINALIT√â TOTALE - Questions jamais formul√©es (seed: ${ultraUniqueSeed})

üìã FORMAT JSON REQUIS (AUCUN AUTRE TEXTE) :
[
  {
    "id": "q1",
    "question": "Question biblique pr√©cise et th√©ologiquement exacte",
    "options": ["Option A", "Option B", "Option C", "Option D"],
    "correctAnswer": 0,
    "verse": "R√©f√©rence biblique exacte avec citation courte"
  }
]

üé™ CR√âATIVIT√â BIBLIQUE MAXIMALE :
- Explorez diff√©rents aspects du th√®me (historique, proph√©tique, typologique)
- Variez les types de questions (qui, quoi, o√π, quand, pourquoi, comment)
- Utilisez des angles d'approche originaux et enrichissants
- √âvitez les formulations banales ou r√©p√©titives
- Questions stimulantes testant la vraie connaissance biblique

‚ö° G√âN√âREZ MAINTENANT ${questionCount} QUESTIONS BIBLIQUES PARFAITES :
Th√®me : "${selectedContext.title}"
Niveau : ${selectedDifficulty.level}
Seed unique : ${ultraUniqueSeed}

R√âPONDEZ UNIQUEMENT AVEC LE TABLEAU JSON - RIEN D'AUTRE !`;

    console.log('üìã PROMPT TH√âOLOGIQUE RIGOUREUX ENVOY√â :');
    console.log('=' .repeat(80));
    console.log(rigorousPrompt);
    console.log('='.repeat(80));

    console.log('ü§ñ Appel √† Gemini-1.5-Pro avec seed:', ultraUniqueSeed);

    // Utilisation du mod√®le Gemini le plus performant avec param√®tres optimis√©s
    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent?key=${geminiApiKey}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        contents: [{
          parts: [{
            text: rigorousPrompt
          }]
        }],
        generationConfig: {
          temperature: 0.7,      // √âquilibre cr√©ativit√©/pr√©cision
          topK: 40,             // Diversit√© contr√¥l√©e
          topP: 0.8,            // Coh√©rence optimale
          maxOutputTokens: 8000, // Suffisant pour questions d√©taill√©es
          candidateCount: 1,     // Une seule r√©ponse de qualit√©
        },
        safetySettings: [
          {
            category: "HARM_CATEGORY_HARASSMENT",
            threshold: "BLOCK_NONE"
          },
          {
            category: "HARM_CATEGORY_HATE_SPEECH", 
            threshold: "BLOCK_NONE"
          },
          {
            category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
            threshold: "BLOCK_NONE"  
          },
          {
            category: "HARM_CATEGORY_DANGEROUS_CONTENT",
            threshold: "BLOCK_NONE"
          }
        ]
      }),
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('‚ùå Erreur API Gemini:', response.status, errorText);
      
      if (response.status === 429) {
        throw new Error('Quota Gemini d√©pass√©. Veuillez v√©rifier votre plan.');
      } else if (response.status === 401 || response.status === 403) {
        throw new Error('Cl√© API Gemini invalide ou non autoris√©e.');
      } else {
        throw new Error(`Erreur Gemini API (${response.status}): ${errorText}`);
      }
    }

    const data = await response.json();
    console.log('üì° R√âPONSE COMPL√àTE GEMINI:', JSON.stringify(data, null, 2));

    const generatedContent = data.candidates?.[0]?.content?.parts?.[0]?.text;

    if (!generatedContent) {
      console.error('‚ùå Aucun contenu g√©n√©r√© par Gemini');
      throw new Error('Gemini n\'a g√©n√©r√© aucun contenu valide');
    }

    console.log('üìÑ CONTENU BRUT GEMINI:', generatedContent);

    // Nettoyage et extraction du JSON avec validation stricte
    let cleanedContent = generatedContent.trim();
    
    // Suppression des balises markdown
    cleanedContent = cleanedContent.replace(/```json\s*/gi, '');
    cleanedContent = cleanedContent.replace(/\s*```/g, '');
    cleanedContent = cleanedContent.replace(/^[^[\{]*/, ''); // Supprime tout avant le premier [ ou {
    cleanedContent = cleanedContent.replace(/[^}\]]*$/, ''); // Supprime tout apr√®s le dernier } ou ]
    
    // Recherche du tableau JSON
    const jsonStart = cleanedContent.indexOf('[');
    const jsonEnd = cleanedContent.lastIndexOf(']') + 1;
    
    if (jsonStart === -1 || jsonEnd === 0) {
      console.error('‚ùå Aucun tableau JSON trouv√© dans la r√©ponse Gemini');
      console.log('üìÑ Contenu re√ßu:', cleanedContent);
      throw new Error('Format de r√©ponse Gemini invalide - JSON manquant');
    }
    
    const jsonContent = cleanedContent.substring(jsonStart, jsonEnd);
    console.log('üßπ JSON EXTRAIT ET NETTOY√â:', jsonContent);

    let questions;
    try {
      questions = JSON.parse(jsonContent);
    } catch (parseError) {
      console.error('‚ùå √âchec du parsing JSON:', parseError);
      console.log('üìÑ Contenu d√©faillant:', jsonContent);
      throw new Error('Impossible de parser la r√©ponse JSON de Gemini');
    }

    // Validation th√©ologique stricte
    if (!Array.isArray(questions)) {
      console.error('‚ùå La r√©ponse n\'est pas un tableau:', typeof questions);
      throw new Error('R√©ponse Gemini non conforme - tableau requis');
    }

    if (questions.length === 0) {
      console.error('‚ùå Tableau de questions vide');
      throw new Error('Gemini n\'a g√©n√©r√© aucune question biblique');
    }

    console.log(`üìä QUESTIONS BIBLIQUES G√âN√âR√âES : ${questions.length}`);

    // Validation et sanctification de chaque question
    const sanctifiedQuestions = questions.slice(0, questionCount).map((q, index) => {
      console.log(`üîç Validation question biblique ${index + 1}:`, q);
      
      if (!q || typeof q !== 'object') {
        throw new Error(`Question ${index + 1} invalide - structure incorrecte`);
      }

      const questionId = q.id || `biblical_q${index + 1}`;
      const question = q.question || `Question biblique ${index + 1} non d√©finie`;
      
      if (!Array.isArray(q.options) || q.options.length !== 4) {
        console.error(`‚ùå Question ${index + 1} - options invalides:`, q.options);
        throw new Error(`Question ${index + 1}: 4 options bibliques requises, re√ßu ${q.options?.length || 0}`);
      }
      
      const correctAnswer = typeof q.correctAnswer === 'number' && 
        q.correctAnswer >= 0 && q.correctAnswer <= 3 
        ? q.correctAnswer 
        : 0;
      
      if (correctAnswer !== q.correctAnswer) {
        console.warn(`‚ö†Ô∏è Question ${index + 1}: correctAnswer corrig√© de ${q.correctAnswer} vers ${correctAnswer}`);
      }
      
      const verse = q.verse || 'R√©f√©rence biblique √† v√©rifier';

      return {
        id: questionId,
        question: question.trim(),
        options: q.options.map(opt => opt.toString().trim()),
        correctAnswer,
        verse: verse.trim()
      };
    });

    console.log(`‚úÖ SUCC√àS TOTAL ! ${sanctifiedQuestions.length} QUESTIONS BIBLIQUES PARFAITES G√âN√âR√âES`);
    console.log('üìñ APER√áU DES QUESTIONS CR√â√âES :');
    sanctifiedQuestions.forEach((q, i) => {
      console.log(`${i + 1}. ${q.question.substring(0, 100)}...`);
      console.log(`   R√©ponse: ${q.options[q.correctAnswer]} (${q.verse})`);
    });

    return new Response(JSON.stringify({ questions: sanctifiedQuestions }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('‚ùå ERREUR FATALE dans generate-quiz-questions:', error);
    
    return new Response(JSON.stringify({ 
      error: error.message,
      details: '√âchec de la g√©n√©ration du quiz biblique avec Gemini',
      timestamp: new Date().toISOString()
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});
