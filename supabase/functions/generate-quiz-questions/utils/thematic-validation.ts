
import { strictThematicKeywords } from './thematic-keywords.ts';

// Validation th√©matique ULTRA-STRICTE avec mots-cl√©s pour TOUS les th√®mes - VERSION PRODUCTION
export function validateThematicRelevance(questions: any[], selectedTheme: string): any[] {
  console.log(`üéØ VALIDATION TH√âMATIQUE ULTRA-STRICTE PRODUCTION pour: ${selectedTheme}`);
  
  const keywords = strictThematicKeywords[selectedTheme] || [];
  
  if (keywords.length === 0) {
    console.warn(`‚ö†Ô∏è AUCUN MOT-CL√â D√âFINI POUR LE TH√àME: ${selectedTheme} - CR√âATION AUTOMATIQUE`);
    // Si pas de mots-cl√©s d√©finis, on cr√©e une validation bas√©e sur le nom du th√®me
    const autoKeywords = selectedTheme.split('-').concat([selectedTheme]);
    console.log(`üîß Mots-cl√©s automatiques cr√©√©s: ${autoKeywords.join(', ')}`);
    return validateWithKeywords(questions, autoKeywords, selectedTheme);
  }
  
  return validateWithKeywords(questions, keywords, selectedTheme);
}

function validateWithKeywords(questions: any[], keywords: string[], selectedTheme: string): any[] {
  const thematicallyValidQuestions = questions.filter(q => {
    const fullText = `${q.question} ${q.options.join(' ')} ${q.verse || ''}`.toLowerCase();
    
    // V√©rification MOINS STRICTE : au moins 1 mot-cl√© doit √™tre pr√©sent
    const matchingKeywords = keywords.filter(keyword => 
      fullText.includes(keyword.toLowerCase())
    );
    
    const isThematicallyValid = matchingKeywords.length >= 1;
    
    if (!isThematicallyValid) {
      console.warn(`‚ùå QUESTION HORS-TH√àME REJET√âE PRODUCTION: "${q.question.substring(0, 60)}..."`);
      console.warn(`   Mots-cl√©s trouv√©s: ${matchingKeywords.join(', ') || 'AUCUN'}`);
      console.warn(`   Mots-cl√©s requis pour "${selectedTheme}": ${keywords.join(', ')}`);
    } else {
      console.log(`‚úÖ Question th√©matiquement valide PRODUCTION: "${q.question.substring(0, 60)}..." (mots-cl√©s: ${matchingKeywords.join(', ')})`);
    }
    
    return isThematicallyValid;
  });
  
  console.log(`üéØ R√âSULTAT PRODUCTION: ${thematicallyValidQuestions.length}/${questions.length} questions respectent le th√®me "${selectedTheme}"`);
  
  // Version production : seuil R√âDUIT √† 50% pour √©viter les √©checs
  const validationThreshold = Math.max(1, Math.ceil(questions.length * 0.5));
  if (thematicallyValidQuestions.length < validationThreshold) {
    console.error(`‚ùå √âCHEC VALIDATION TH√âMATIQUE PRODUCTION: Seulement ${thematicallyValidQuestions.length}/${questions.length} questions valides pour "${selectedTheme}" (minimum requis: ${validationThreshold})`);
    throw new Error(`Questions g√©n√©r√©es ne respectent pas suffisamment le th√®me "${selectedTheme}". Qualit√© production non atteinte. Relancez la g√©n√©ration.`);
  }
  
  return thematicallyValidQuestions;
}
